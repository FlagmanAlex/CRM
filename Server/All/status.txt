Веб-серверы, построенные на Node.js, используют стандартные HTTP-статусы для ответов клиенту. 
Вот основные категории и примеры статусов:

1xx: Информационные
100 Continue — сервер получил начальные заголовки и ожидает остальную часть запроса.
101 Switching Protocols — сервер переключает протоколы по запросу клиента.

2xx: Успешные
200 OK — запрос успешно обработан.
201 Created — запрос успешно выполнен, и создан новый ресурс.
204 No Content — запрос успешно обработан, но ответ не содержит тела.

3xx: Перенаправления
301 Moved Permanently — запрошенный ресурс был permanently moved на новый URI.
302 Found — запрошенный ресурс временно перемещен на другой URI.
304 Not Modified — ресурс не изменился, используется кэшированная версия.

4xx: Ошибки клиента
400 Bad Request — сервер не может обработать запрос из-за ошибки клиента.
401 Unauthorized — для доступа требуется аутентификация.
403 Forbidden — доступ к ресурсу запрещен.
404 Not Found — запрошенный ресурс не найден.
429 Too Many Requests — клиент отправил слишком много запросов за короткое время.

5xx: Ошибки сервера
500 Internal Server Error — общая ошибка сервера.
501 Not Implemented — сервер не поддерживает функциональность, необходимую для выполнения запроса.
502 Bad Gateway — сервер, действуя как шлюз, получил недопустимый ответ.
503 Service Unavailable — сервер временно не может обработать запрос (например, из-за перегрузки).
504 Gateway Timeout — сервер, действуя как шлюз, не дождался ответа от upstream-сервера.

Эти статусы используются для информирования клиента о результате выполнения запроса. 
В Node.js их можно задавать с помощью метода res.status(code) в Express или других фреймворках.